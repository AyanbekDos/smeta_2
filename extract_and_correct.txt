**Analyzing Prompt Components**

I've started by dissecting the original prompt, identifying its central goal: transforming the provided prompt into a more presentable format while maintaining its core logical structure. Currently focusing on isolating the key instructions. I'm considering the intended audience and the best approach for clarity.


**Structuring the Conversion Task**

I'm now outlining the steps the AI needs to follow. The AI must extract key data points like profile, size, steel grade, and mass from the provided source. I'm focusing on creating a clear, step-by-step methodology. I am now structuring the logic as a two-step process, as requested by the original prompt. This is proving more complex than initially anticipated.


**Mapping Data Extraction**

I'm now focusing on mapping the entities to be extracted to their corresponding positions in the source data. I've refined the extraction logic to prioritize accurate identification of profiles, sizes, and steel grades. Considering the OCR error correction examples, I'm creating a rule-based system to resolve potential inconsistencies. The next stage is to handle the "Total" row cases.


**Outlining Step-by-Step Actions**

I'm now outlining the initial step: defining the AI's role and the overall objective. This involves specifying the AI's persona as a metal structure specialist and setting the stage for the conversion task. I'm aiming to provide the initial context. Then, the prompt should define what is to be expected in the second step. I am concentrating on clarity and structure.


**Decomposing the Task**

I'm now methodically breaking down the original prompt. I've focused on the critical aspect of splitting the instructions into two distinct steps to meet the requirements. I'm analyzing what needs to be included in each step to ensure clarity and comprehensiveness. My next step is to analyze the necessary formatting required for the output.


**Formulating the Two Steps**

I'm now composing the structure, detailing the AI's task and outlining the data extraction rules. Step one will define the AI's role and high-level objectives, focusing on context setting and the output's format. Step two will provide all specific data extraction rules, including handling OCR corrections, data normalization, and the required JSON structure in precise detail.


**Defining the Extraction Rules**

I'm now focused on refining the specific rules for data extraction, OCR correction, and data normalization. I am crafting structured bulleted lists for the different rules from the original prompt, and organizing them by category. This includes outlining the logic for multiple entries, generating unique IDs, and handling the "Total" rows, focusing on accuracy and clarity.


**Structuring Step-by-Step Instructions**

I'm now organizing the comprehensive "how-to" steps for the AI. I'll establish clear sub-sections for the extraction rules, OCR correction details (sizes, steel grades), and most importantly, the JSON format guidelines. I will make these sections easily navigable. I am also planning on clarifying the critical importance of the output structure.


**Revising Data Extraction**

I'm now restructuring the sections within Step 2. I've added subheadings for clarity, defining rules for data extraction, OCR error correction, and the critical JSON output format, which I'm now including. I'm adding further rules for normalization of the data.


**Finalizing Prompt Instructions**

I'm now finalizing the prompt instructions, aiming for maximum clarity and effectiveness. I've refined the formatting, using bolding, bullet points, and code blocks to enhance readability for the AI. My focus is on ensuring the AI understands the steps. I am reviewing and editing the "how-to" sections, with a final check of the JSON structure requirements.


Отлично! Я привел ваш промт в более структурированный и читаемый вид, сохранив всю логику, примеры и ключевые требования. Я разбил его на два основных шага, как вы и просили.

***

### **ШАГ 1: Постановка задачи и определение ключевых сущностей**

Ты — продвинутый AI-ассистент, специализирующийся на анализе и структурировании технических спецификаций металлоконструкций.

Твоя задача — проанализировать таблицу-спецификацию металлопроката, извлечь все значимые данные и преобразовать их в строго определенный иерархический JSON-формат. Ты должен использовать интеллектуальный контекстный подход для исправления распространенных ошибок оптического распознавания символов (OCR).

**Основные данные для извлечения:**

*   **Профиль:** Тип металлопроката (например, "Прокат листовой горячекатаный ГОСТ...").
*   **Размер:** Габариты или обозначение профиля (например, "s5", "125 Б 2", "I20 W1"). **Это обязательное поле.**
*   **Марка стали:** Марка стали, извлеченная из соответствующей колонки (например, "С245", "09Г2С").
*   **Масса:** Числовое значение массы.
*   **Элемент металлоконструкций:** Назначение элемента, определяемое по названию колонки, из которой взята масса (например, "балки", "стойки", "настил").
*   **Позиция (поз):** Номер позиции из таблицы.
*   **Единица измерения:** Определяется по таблице ("т", "кг").

---

### **ШАГ 2: Детальные правила обработки и требования к формату вывода**

#### **1. Правила извлечения и обработки данных**

*   **Распределение по элементам:** Если один и тот же профиль (например, лист `s5`) имеет разные значения массы в разных колонках назначения ("стойки", "связи", "лестницы"), это должны быть **отдельные записи** в итоговом JSON.
*   **Генерация позиций:** Для таких разделенных записей поле `поз` можно генерировать самостоятельно, чтобы они были уникальны (например, если исходная позиция "11", можно сгенерировать "11-1", "11-2", "11-3").
*   **Источник массы:** Масса должна быть взята из соответствующего столбца элемента, а не из общей суммы.
*   **Единая запись:** Если масса указана только в колонке "Общая масса" и нет распределения по элементам, то это один профиль и одна запись.
*   **Наследование данных:** Если ячейка марки стали пустая, но в предыдущих строках для других профилей она была заполнена, используй значение из последней заполненной ячейки сверху.
*   **Игнорируемые строки:** Пропускай итоговые строки ("Итого", "Всего профиля" и т.п.).
*   **Формат чисел:** Все числа записывай с точкой в качестве десятичного разделителя (например, `1.25`, а не `1,25`).
*   **Нечитаемые данные:** Если данные в ячейке невозможно разобрать, используй значение `null`.

#### **2. Коррекция ошибок OCR и нормализация данных**

**Размеры профилей:**
*   `[16n` → `16п` (швеллер 16 с параллельными полками)
*   `[200` → `200` (швеллер 200)
*   `[120` → `120` (швеллер 120)
*   `[22n` → `22п` (швеллер 22 с параллельными полками)
*   `C247` → `24У` (швеллер 24 с уклоном полок)
*   `+5` → `s5` (лист толщиной 5 мм)
*   `nucm` → `лист` (просечно-вытяжной лист)
*   Символы `[` и `]` часто являются ошибками OCR и должны быть заменены на соответствующие цифры или буквы (например, `[` может быть швеллером, `I` — двутавром).
*   `W` → `Ш` (например, `I35W1` → `I35Ш1`)
*   `6` → `Б` (например, `I2561` → `I25Б1`)
*   Буква `I` (двутавр) часто распознается как цифра `1`.

**Марки стали:**
*   **Приведи к стандарту:** Используй стандартные обозначения: `Ст3`, `С245`, `С255`, `С285`, `С345`, `С375`, `С390`, `С440`, `09Г2С`, `10ХСНД`, `15ХСНД`.
*   **Исправляй ошибки:**
    *   `Ст5` → `Ст3`
    *   `C245` → `С245` (латинская 'C' на кириллическую 'С')
    *   `С245РТ` → `С245` (удаляй лишние суффиксы)
    *   `С255КТ` → `С255`
    *   `TOCT` → `ГОСТ`

#### **3. КРИТИЧЕСКИ ВАЖНЫЕ ТРЕБОВАНИЯ К ФОРМАТУ ВЫВОДА**

**ОТВЕЧАЙ ТОЛЬКО JSON БЕЗ КАКИХ-ЛИБО КОММЕНТАРИЕВ!** Формат должен быть **строго иерархическим**.

**Иерархия:** `профиль` → `марка_стали` → `размер` → `элемент` → `{позиции, масса}`

*   Корневой ключ `"профили"` должен быть **ОБЪЕКТОМ**, а не массивом.
*   Собирай номера позиций (`поз`) для одинаковых элементов в **массив `["1", "2", ...]`**.
*   Не суммируй массы. Каждая запись массы для элемента — это отдельный объект.

❌ **НЕПРАВИЛЬНО (плоский список):**
```json
{
  "единица_измерения": "т",
  "профили": [
    {"поз": "1", "профиль": "...", "размер": "..."}
  ]
}
```

✅ **ПРАВИЛЬНО (строго иерархическая структура):**
```json
{
  "единица_измерения": "т",
  "профили": {
    "Двутавры стальные горячекатаные с параллельными гранями полок ГОСТ Р 57837-2017": {
      "марки_стали": {
        "С355": {
          "размеры": {
            "40К1": {
              "элементы": {
                "Стойки, колонны": {
                  "позиции": ["1"],
                  "масса": 63.53
                },
                "Балки, траверсы, кронштейны, ригели": {
                  "позиции": ["2"],
                  "масса": 3.82
                }
              }
            },
            "40К4": {
              "элементы": {
                "Стойки, колонны": {
                  "позиции": ["3"],
                  "масса": 89.74
                }
              }
            }
          }
        }
      }
    },
    "Швеллеры стальные гнутые ГОСТ 8278-83": {
        "марки_стали": {
            "С245": {
                "размеры": {
                    "100x50x3": {
                        "элементы": {
                            "Прогоны, связи": {
                                "позиции": ["15", "16"],
                                "масса": 4.12
                            }
                        }
                    }
                }
            }
        }
    }
  }
}
```

🔥 **ФИНАЛЬНОЕ ТРЕБОВАНИЕ: ИСПОЛЬЗУЙ ТОЛЬКО ЭТОТ ИЕРАРХИЧЕСКИЙ ФОРМАТ! ЛЮБОЙ ДРУГОЙ СЧИТАЕТСЯ ОШИБКОЙ!**