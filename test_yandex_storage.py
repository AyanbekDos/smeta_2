#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Yandex Object Storage
"""
import os
import json
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –°–ù–ê–ß–ê–õ–ê
from dotenv import load_dotenv
if os.path.exists('.env.local'):
    load_dotenv('.env.local', override=True)
else:
    load_dotenv()

# –¢–ï–ü–ï–†–¨ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º yandex_storage
from yandex_storage import yandex_storage

def test_yandex_storage():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ Yandex Storage"""
    
    print("=" * 50)
    print("–¢–µ—Å—Ç Yandex Object Storage")
    print("=" * 50)
    
    if not yandex_storage.client:
        print("‚ùå Yandex Storage –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return False
    
    print("‚úÖ Yandex Storage –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–æ–∫–∏
    print("\nüì§ –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–æ–∫–∏")
    test_content = "–¢–µ—Å—Ç –æ—Ç " + datetime.now().isoformat()
    test_path = f"test/string_test_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
    
    if yandex_storage.upload_string(test_content, test_path, "text/plain"):
        print(f"‚úÖ –°—Ç—Ä–æ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {test_path}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–æ–∫–∏: {test_path}")
        return False
    
    # –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ JSON
    print("\nüì§ –¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ JSON")
    test_data = {
        "test": True,
        "timestamp": datetime.now().isoformat(),
        "message": "–¢–µ—Å—Ç JSON –¥–ª—è Yandex Storage"
    }
    json_path = f"test/json_test_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
    
    if yandex_storage.upload_json(test_data, json_path):
        print(f"‚úÖ JSON –∑–∞–≥—Ä—É–∂–µ–Ω: {json_path}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON: {json_path}")
        return False
    
    # –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ gzip
    print("\nüì§ –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ gzipped —Å—Ç—Ä–æ–∫–∏")
    gzip_content = "–≠—Ç–æ –±–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–∂–∞—Ç —Å –ø–æ–º–æ—â—å—é gzip" * 100
    gzip_path = f"test/gzip_test_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt.gz"
    
    if yandex_storage.upload_gzipped_string(gzip_content, gzip_path, "text/plain"):
        print(f"‚úÖ Gzipped —Å—Ç—Ä–æ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {gzip_path}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ gzipped —Å—Ç—Ä–æ–∫–∏: {gzip_path}")
        return False
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    print("\nüîç –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤")
    
    if yandex_storage.file_exists(test_path):
        print(f"‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {test_path}")
    else:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {test_path}")
        return False
    
    if yandex_storage.file_exists(json_path):
        print(f"‚úÖ JSON —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {json_path}")
    else:
        print(f"‚ùå JSON —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {json_path}")
        return False
    
    # –¢–µ—Å—Ç 5: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    print("\nüìã –¢–µ—Å—Ç 5: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤")
    files = yandex_storage.list_files("test/")
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ test/: {len(files)}")
    for file in files[-3:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Ñ–∞–π–ª–∞
        print(f"   - {file}")
    
    # –¢–µ—Å—Ç 6: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    print("\nüì• –¢–µ—Å—Ç 6: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞")
    temp_download = f"/tmp/downloaded_test_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
    
    if yandex_storage.download_file(test_path, temp_download):
        print(f"‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω: {temp_download}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        with open(temp_download, 'r', encoding='utf-8') as f:
            downloaded_content = f.read()
        
        if downloaded_content == test_content:
            print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º")
        else:
            print("‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!")
            print(f"–û—Ä–∏–≥–∏–Ω–∞–ª: {test_content}")
            print(f"–°–∫–∞—á–∞–Ω–æ: {downloaded_content}")
        
        os.remove(temp_download)
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {test_path}")
        return False
    
    print("\n" + "=" * 50)
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã Yandex Storage –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    print("=" * 50)
    
    return True

if __name__ == "__main__":
    success = test_yandex_storage()
    if not success:
        exit(1)